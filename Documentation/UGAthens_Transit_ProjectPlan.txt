UGAthens Transit:
Project Plan 
A Website that Integrates UGA and Athens Transit Data


By
Eleanor Madderra, Keerthana Ramesh, Isra Naweed, Anjali Devarapalli, Ryan Majd, and Shreyan Bose






December 8, 2024






Table of Contents 


INTRODUCTION        3
Project Overview        3
Client        4
Project Deliverables        4
Definitions        5
PROJECT ORGANIZATION        6
Organizational Structure        6
Project Responsibilities        7
MANAGERIAL PROCESS        7
Management Objectives and Priorities        7
Assumptions, Dependencies, and Constraints        8
Risk Management        8
Configuration Management        9
Monitoring and Controlling        9
TECHNICAL PROCESS        10
Methods, Tools, and Techniques        10
Development Environment        10
WBS, SCHEDULE, AND BUDGET        11
Work Breakdown Structure        11
WBS Chart        13
UGAthens Flowchart        14
Use Cases        14
Dependencies        15
Resource Requirements        16
Schedule        16
Iterations        18
Budget        19
Resource Allocation        19






INTRODUCTION
Project Overview
As students, traveling across campus and throughout Athens is something we do daily. The Athens and UGA Transit systems offer a free and convenient alternative for those without cars as well as those who prefer to avoid the hassle of driving and parking on and off campus. Securing a parking spot on campus is both expensive and very competitive, so taking advantage of free public transportation is a great option for those who live off campus. 
One of the biggest challenges of utilizing public transportation in Athens is understanding and managing the different bus routes and stops. While both the Athens and UGA Transit tracking websites are helpful, needing to switch between the two when trying to find the most efficient route to take can be both overwhelming and time-consuming. 
The UGAthens Transit website aims to address these challenges by providing Athens residents with a more accessible way to navigate UGA’s campus and the city, ultimately enhancing their public transportation experience. By making public transportation easy to navigate, we hope to encourage those who live in Athens to try taking the bus for the first time or use Athens public resources more often. 


This project has the potential to grow and evolve based on user demand, but the scope of this project is confined to a basic website that will enable UGA students, Athens residents, and Athens visitors to view a consolidated list UGA and Athens Transit bus routes, stops, and live bus tracking. This project will also feature a back-end database to keep track of users’ favorite bus routes and stops, though users will be able to access the website as a guest.


It is the goal of this project to create a working, functional website that effectively combines UGA and Athens Transit data in a way that satisfies potential users.
This team defines project goals to be:
* Ability for users to select a route and see all stops on that route as well as all active buses
* Ability for users to select a stop and see all routes that stop there
* Ability for users to login and save favorite bus routes and stops


This team defines project success by the following criteria:
* All project goals above are met
* 85% of test users find our website easy to navigate 
* The members of this team understand the different roles in software development 
* The members of this team are able to work together to create a working product and all necessary deliverables 


Client
In this project, we are both the developers and the client. By developing this website for ourselves as both students and Athens residents, we are able to address the needs and challenges that our potential users face. This unique perspective allows us to approach this project with first-hand experience and insight, enabling us to develop a solution that is both practical and relevant for UGA students and Athens residents like ourselves. 


Project Deliverables 
Deliverable 
	Submittal Date
	Project Macro Plan
	October 17, 2024
	GitHub Project and Repository Creation
	October 20, 2024
	Organizational Structure Diagram
	October 22, 2024
	Baseline Requirements/Functional and Nonfunctional Requirements 
	October 27, 2024
	Figma Design
	November 3, 2024
	First Iteration 
	November 7, 2024
	Authorization Set UP
	November 14, 2024
	Database Creation
	November 14, 2024
	Use Case Diagram
	November 14, 2024
	Second Iteration 
	November 14, 2024
	Organizational Structure Diagram
	November 15, 2024
	Webpage Flowchart
	November 15, 2024
	WBS Chart/Diagram
	November 19, 2024
	Project Plan Document 
	November 20, 2024
	Authorization/User Account Creation
	November 20, 2024
	Third Iteration
	November 21, 2024
	Class Diagram 
	November 23, 2024
	Fourth Iteration 
	November 25, 2024
	Final Presentation 
	November 26, 2024
	Software Requirements
	December 5, 2024
	Software Design Document
	December 6, 2024
	Testing Document 
	December 1, 2024
	Final Product
	December 6, 2024
	

Definitions 
Users
	People who will exclusively use the front end of the website.
Includes UGA students, Athens residents, and Athens visitors 
	Firebase
	Authentication tool that securely manages user logins
	Firestore
	The database within Firebase that stores and syncs real-time data, such as a user’s favorite bus routes and stops across all users
	UGA Transit
	The UGA transportation service. Provides public access to UGA bus routes, stops, and live tracking. Any member of the public may use the UGA buses for free. 
	Athens Transit
	The Athens transportation service. Provides public access to UGA bus routes, stops, and live tracking. Any member of the public may use the Athens buses for free. 
	Route
	The designated path of a bus. Routes loop. 
	Stop
	The different places a bus will let people on and off the bus. Stops may be used in one or more routes. 
	

PROJECT ORGANIZATION
Organizational Structure 
This team has six members and every member has a main responsibility. These responsibilities include: project management, web design, documentation, testing, and backend development. 
The team will help out others with their responsibilities when needed, though team members' main responsibilities will take priority as outlined in the section below. 


  













Project Responsibilities 
Project Manager
Ryan Majd
	* Identify and assign tasks as needed 
* Monitors process of team and keeps everyone on track 
* Helps in different areas of the project as needed 
* Work on front end development 
   * Turn figma design into a useable website 
	Architect/Documentor
Eleanor Madderra
	* Maintains the GitHub Repository 
* Maintains and updates the GitHub Project page
* Keeps up with documentation including the project plan, software design document, and the software requirements specification
	Website Tester
Shreyan Bose
	* Designs test cases
* Tests different test cases, checking for ways users may accidently or maliciously abuse different aspects of the website
* Document test plans and test results 
* Ensure that the website shows accurate, easily readable information 
	Web Designer
Isra Naweed
Keke Ramesh
	* Determines the overall look and feel of the website
* Keeps in mind user need while designing
* Ensures easy usability 
	Back End Developer
Anjali Devarapalli
Keke Ramesh
Isra Naweed
	* Build the backend 
* Scrape the Athens and UGA Transit websites and combine route information 
* Create a working map with live bus tracking 
	

MANAGERIAL PROCESS
Management Objectives and Priorities 
Project Management provides team members with a clear vision of the project's objectives and helps team members understand how their individual assignments contribute to the overall goal. The manager will assign tasks and team members will be expected to estimate the time needed to complete the task, supporting a collaborative planning process and allowing for realistic timelines.
The manager is also responsible for monitoring team progress and keeping everyone on schedule. Team members are responsible for alerting the manager when their workload becomes too much and the manager will reassign tasks as needed. This team structure aims to create a balanced workload for all team members, ensuring that the project can stay on schedule and all of our project goals can be met. 


Assumptions, Dependencies, and Constraints 
This team assumes that users will understand the basics of public transportation: there are different routes and stops that a user can take advantage of. 
This team assumes that users know how to read a map and key. 


This project will suffer a severe setback if a team member were to leave. The timeline of deliverables will be greatly affected and it may take quite a bit of time to fully recover. 


This project is dependent on having access to both UGA and Athens Transit data. If access were to be revoked for some reason, the website may be rendered useless. 


Risk Management
The risks that this team faces are outlined below. They are ranked in order of priority and contain our responses to help mitigate the risk. 


Risks
	Responses
	Difficulties Overcoming Technical Inexperience 
	We will ensure that we have enough time to work on each iteration, so team members will have time to research new technologies and troubleshoot any issues that may arise. 
	Unrealistic Schedule
	We will work on this project in iterations. The main functionality will be included in the beginning iterations. If scheduling issues occur and the team falls behind, the most important features will be completed and unnecessary features can be sacrificed. 
	Underestimating the Amount of Work Something May Require
	We will work on this project in iterations. The most basic requirements will be addressed first so that if we run into issues or run out of time while working on a later requirement, we will still have the basics of our website completed. 
	Team Member Becomes Unavailable 
	Some things are out of our control and we may temporarily (or permanently) lose a teammate unexpectedly. We will make sure that everyone has access to all documents and files and not just one person has control. We will also assign more than one team member to some requirements that may be more difficult. 
	

Configuration Management 
The baseline for this project in terms of project planning will be the Project Plan document. The technological baseline for this project will be the Software Requirements document. 


Any changes made to the project plan must be discussed with the entire team and approved by those that will be directly affected by the plan. 


Monitoring and Controlling
This project will implement an iterative, staged delivery model. By working in increments, we can ensure that a functional product will be able to be delivered quickly while prioritizing the most important features. This approach allows the team to develop the most essential features first and all of the non-essential features can be done during later increments. If an unforeseen issue occurs, the development team may sacrifice some of these features. The ultimate goal is to have a reliable, functioning product. 
The team has agreed to meet up once per week when possible. As the project deadline approaches, the team will attempt to meet twice per week. On Wednesdays after class, the team will have a 5 - 10 minute SCRUM meeting. The team will briefly discuss what work has been completed the previous week and what everyone should be working on in the coming week. When needed, the team will meet on Thursdays to work together on the project in person. These meetings will typically last 1 - 4 hours. 


TECHNICAL PROCESS
Methods, Tools, and Techniques 
This project will utilize an iterative software development approach and follow agile methodologies. The team will use GitHub Projects to keep track of individual and team assignments, as well as to maintain the project schedule.
The team will utilize draw.io and Google Drawings to create the necessary diagrams. 
Google Drive will be used to create documents and presentations so everyone on the team will have the ability to access and edit. 


Development Environment 
Software Languages
	Javascript, CSS, ReactJS, NodeJS
	Website Design
	Figma
	Version Control
	GitHub
	Authorization
	Firebase
	APIs
	Google Maps, Google Maps Transit, Firebase
	Database
	Firestore (not implemented due to time constraints)
	

WBS, SCHEDULE, AND BUDGET 
Work Breakdown Structure
Deliverables
	Activities
	Project Plan 
	* Assign roles to team members
* Determine group structure and how much control the Project Manager has 
* Determine individual tasks for team members and estimate time needed 
* Create a timeline based off of the individual tasks 
* Create GitHub project board and transfer timeline to board
* Write document 
	Requirements Document
	* Meet with team to discuss necessary requirements
* Create use cases and use case diagram 
* Write document 
	Figma/Front-End Design 
	* Create Figma document and share with all team members
* Determine color palate 
* Create a design that can be integrated on both desktop and mobile devices
	Design Document 
	* As website is being created, keep track of our process and sketch necessary diagrams
* Once website is near completion, finalize diagrams
	First Iteration
	* Finalize Figma design 
* Create the front end of the website using previously made design 
	Second Iteration 
	* Research authentication and chose an authentication method 
* Create Firebase account and basics 
	Third Iteration 
	* Finalize and test authentication methods 
* Users will be able to create and account and log in and log out 
	Fourth Iteration 
	* Research data integration methods
* Experiment with web scraping and different free and available APIs
* Integrate UGA bus data onto the website 
* Integrate Athens Transit bus data onto the website
* Complete basic testing involving data integration 
	Fifth Iteration 
	* Research map integration 
* Create a viewable map that has all bus stop locations marked 
* Complete final testing of the product 
	Test Document
	* While website is being created, come up with a list of tests to run in the future
* As each iteration is complete, test whatever possible and log results 
* Once website is complete, work on final round of testing
* Complete document and log  
	Project Presentation
	* Finalize project plan document 
* Determine presentation outline 
* Assign each team member a section to complete
* Finalize presentation and assign speaking roles to team members 
* Determine which team member will be responsible for project demonstration 
	Final Product 
	* Final product is published
	

WBS Chart
  





















UGAthens Flowchart
The flowchart below is a depiction of the original project plan. The design of the final website can be found on the Software Design document. 
  



Use Cases
The use cases below were the use cases for the original design of the website. Due to time constraints, not all features were able to be implemented. The use cases for the final design of the website can be found in the Software Design document under Use Case View. 


Use Case:
	Sorting Through Bus Stops
	Actors:
	Guest Users and Users
	Description:
	This use case begins when an individual visits the website. The user can be a guest user or a user with an account. The user will be able to sort through different bus stops of both UGA and Athens Transit systems. If a bus stop is selected, the website will display all routes that stop at that particular bus stop. 
	



Use Case:
	Sorting Through Bus Routes
	Actors:
	Guest Users and Users
	Description:
	This use case begins when an individual visits the website. The user can be a guest user or a user with an account. The user will be able to sort through different bus routes of both UGA and Athens Transit systems. If a route is selected, the website will show all stops on that route. 
	



Use Case:
	Sorting Through Favorites
	Actors:
	Users
	Description:
	This use case begins when an individual logs into their account. The user will be able to sort through a list of all of their favorite bus stops and routes. If a route or stop is selected, it will display all stops or routes associated with it. 
	

Dependencies 
Due to time constraints, aspects of project planning (scheduling, requirements, and architecture) and project development are occurring simultaneously. There are many aspects of project development that rely on sections of project planning being completed. The project manager kept these dependencies in mind while assigning tasks and forming the project schedule. 
For example, the functional and nonfunctional requirements needed to be defined before our work could begin, so that was something we prioritized. As seen in the image below, our requirements were defined before we began to work on the back end. 
  

Some other dependencies include our Figma design and the frontend. Before we completed the front end, the web designers created a Figma mockup of the website so the developers had a design to follow. Later iterations of the UGAthens website will be improved upon using information gathered in the testing stage. 


Resource Requirements 
Staff resource requirements include 6 team members including a project manager, front/back end developers, designers, testers, and documentors. All team members will be required to have access to a computer with internet access, a GitHub account, access to their preferred coding software, and Google Drive access. 


Schedule 
The schedule for this project will be available to team members on the GitHub Project page. All assignments are given a size, and importance level, and assigned to 1 - 6 team members. The size of an assignment represents how much work and time the assignment requires. Sizes include XS, S, M, L, and XL. The importance level or priority represents how important each assignment is and how critical it is to the project as a whole. Priority 0 is the most important Priority 1 the next most important level and so and so forth. Priority levels include P0, P1, P2, and P3. 
  
  
  



Iterations
Each iteration is outlined below, with the focus of each iteration being determined by three main factors: importance, team availability, and task difficulty. The team prioritized completing the most critical aspects of the project first, especially those on which other sections depended on. While importance was the primary consideration, team availability and task difficulty also played a role. 
At certain times, two or three different iterations were being worked on simultaneously. This overlap occured when team members could work independently and all necessary dependencies were completed. For example, the iterations that focused on authentication and data integration steps were begun during the same week. While data integration was more critical, the authentication focused iteration was completed first because it was less complex. Even though task difficulty and team availability sometimes caused the completion of certain iterations to be delayed, our flexible, iterative approach helped us maintain steady progress overall. 




Iteration One
	* Front end website is able to be accessed with no errors
	Iteration Two
	* Authentication base is completed
	Iteration Three
	* Authentication is fully functional
	Iteration Four
	* Data is integrated
* User is able to view website and see live arrival times of UGA and Athens buses
	Iteration Five
	* Map is implemented 
	

Budget 
There is no financial cost associated with this project. The team considered purchasing a domain name, but ultimately decided against it. If the website is ever to be officially published, it will be published under the domain name a team member has already purchased. While the full domain name may not fully match up with what we originally wanted, the save in cost will be worth it. 
This project will also be budgeted according to time spent. By our estimates, each team member will spend 25 hours total on this project. This works out to about 5 hours per week. In total, our team will spend 150 hours to complete this project. 


Resource Allocation 
The time spent on this project is broken down below. This table depicts both the estimated/budgeted time and the actual time spent on each section of the project. The hours spent will be rounded to the nearest hour for easy readability. The hours listed below are the total hours spent amongst the entire 6 person team. 


Category 
	Budgeted Hours
	Actual Hours
	Brainstorming and Planning
	10
	12
	Design
	10
	6
	Documentation
	45
	25
	Research
	10
	6
	Front End Programming
	20
	15
	Back End Programming
	45
	45
	Testing
	10
	3
	Total
	150
	112